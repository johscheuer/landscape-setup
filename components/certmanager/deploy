#!/bin/bash -eu
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ $# -gt 1 ] && [ $2 == "-u" -o $2 == "--uninstall" ]; then # uninstall certmanager
    # delete certmanager
    helm delete --purge cert-manager

    # check if oidc-ca-file line is already there, add it if not
    pos=$(kubectl -n kube-system get -o template ds kube-apiserver --template='{{range $i, $elem := (index .spec.template.spec.containers 0).command}}{{if eq $elem "--oidc-ca-file=/etc/kubernetes/secrets/ca.crt"}}{{$i}}{{end}}{{end}}')
    if [ -z $pos ]; then # line "--oidc-ca-file=/etc/kubernetes/secrets/ca.crt" not found, insert it
        # find apiserver line to locate patch position
        pos=$(kubectl -n kube-system get -o template ds kube-apiserver --template='{{range $i, $elem := (index .spec.template.spec.containers 0).command}}{{if eq $elem "apiserver"}}{{$i}}{{end}}{{end}}')
        if [ -z $pos ]; then
            if [ $# -gt 3 ] && [ $3 == "--patch-position" ]; then # manually specified patch position
                pos=$4
            else
                fail "Line \"apiserver\" not found in daemonset kube-apiserver! To manually specify the patch position (line below apiserver line), give \"--patch-position <position>\" as additional parameters."
            fi
        else 
            ((pos=$pos+1)) # add 1 to position of apiserver line to compute patch position
        fi
        # patch line '--oidc-ca-file=/etc/kubernetes/secrets/ca.crt' into kube-apiserver again
        $COMPONENT_TEMPLATE_HOME/prepare_apiserver_patch.sh 
        kubectl -n kube-system patch ds kube-apiserver --type json -p='[{"op": "add", "path": "/spec/template/spec/containers/0/command/'$pos'", "value": "--oidc-ca-file=/etc/kubernetes/secrets/ca.crt"}]'
        $COMPONENT_TEMPLATE_HOME/prepare_apiserver_patch.sh undo
    fi

    # patch dashboard and ingress 
    identity_issuer=$(kubectl get ingress -n kube-system  identity-ingress -o jsonpath="{.metadata.annotations.certmanager\.k8s\.io/cluster-issuer}")
    if [ "$identity_issuer" = "letsencrypt" ] ; then
        kubectl -n kube-system patch ingress identity-ingress --type merge \
            -p="$(cat ${COMPONENT_TEMPLATE_HOME}/issuer-delete-patch.yaml)"
    fi
    
    dashboard_issuer=$(kubectl get ingress -n garden  gardener-dashboard-ingress -o jsonpath="{.metadata.annotations.certmanager\.k8s\.io/cluster-issuer}")
    if [ "$dashboard_issuer" = "letsencrypt" ] ; then
        kubectl -n garden patch ingress gardener-dashboard-ingress --type merge \
            -p="$(cat ${COMPONENT_TEMPLATE_HOME}/issuer-delete-patch.yaml)"
    fi

    # delete letsencrypt secrets
    kubectl -n garden delete secret gardener-dashboard-tls --ignore-not-found
    kubectl -n kube-system delete secret identity-tls  --ignore-not-found

    # restore certificates by deploying identity and dashboard again
    # TODO find better solution
    $LANDSCAPE_COMPONENTS_HOME/deploy.sh identity
    $LANDSCAPE_COMPONENTS_HOME/deploy.sh dashboard

    # delete certmanager stuff
    kubectl delete ns certmanager
    rm -rf $COMPONENT_STATE_HOME
else
    # render issuer file
    mako-render ${COMPONENT_TEMPLATE_HOME}/cert-manager-issuer.yaml.tmpl >${COMPONENT_STATE_HOME}/cert-manager-issuer.yaml

    # install certificate manger
    helm upgrade --install \
    --force \
    --wait \
    --namespace \
    certmanager cert-manager stable/cert-manager \
    --version v0.3.0

    # install certificate manager issuer
    kubectl apply -f ${COMPONENT_STATE_HOME}/cert-manager-issuer.yaml

    # remove existing certificates (they will not be overwritten)

    kubectl -n garden delete secret gardener-dashboard-tls
    kubectl -n kube-system delete secret identity-tls  

    # patch dashboard and ingress 
    dashboard_issuer=$(kubectl get ingress -n garden  gardener-dashboard-ingress -o jsonpath="{.metadata.annotations.certmanager\.k8s\.io/cluster-issuer}")
    if [ "$dashboard_issuer" != "letsencrypt" ] ; then
        kubectl -n garden patch ingress gardener-dashboard-ingress \
            -p="$(cat ${COMPONENT_TEMPLATE_HOME}/issuer-patch.yaml)"
    fi

    identity_issuer=$(kubectl get ingress -n kube-system  identity-ingress -o jsonpath="{.metadata.annotations.certmanager\.k8s\.io/cluster-issuer}")
    if [ "$identity_issuer" != "letsencrypt" ] ; then
        kubectl -n kube-system patch ingress identity-ingress \
            -p="$(cat ${COMPONENT_TEMPLATE_HOME}/issuer-patch.yaml)"
    fi

    # wait until secrets have been recreated
    max_retry_time=300
    retry_stop=$(($(date +%s) + max_retry_time))
    success=false
    while [[ $(date +%s) -lt $retry_stop ]]; do
        sleep 10
        if $(kubectl -n garden get secret gardener-dashboard-tls &> /dev/null) && $(kubectl -n kube-system get secret identity-tls &> /dev/null); then
        success=true
        break;
        fi
        debug "Secrets gardener-dashboard-tls and identity-tls not recreated yet. Waiting ..."
    done
    if ! $success; then
        fail "Secrets gardener-dashboard-tls and identity-tls not created within $max_retry_time seconds!"
    fi

    # find position of the line '--oidc-ca-file=/etc/kubernetes/secrets/ca.crt' and save the array position of that entry within the yaml to variable
    pos=$(kubectl -n kube-system get -o template ds kube-apiserver --template='{{range $i, $elem := (index .spec.template.spec.containers 0).command}}{{if eq $elem "--oidc-ca-file=/etc/kubernetes/secrets/ca.crt"}}{{$i}}{{end}}{{end}}')
    if [ $pos ]; then
        # delete that entry
        $COMPONENT_TEMPLATE_HOME/prepare_apiserver_patch.sh 
        kubectl -n kube-system patch ds kube-apiserver --type json -p='[{"op": "remove", "path": "/spec/template/spec/containers/0/command/'$pos'"}]'
        $COMPONENT_TEMPLATE_HOME/prepare_apiserver_patch.sh undo
    else
        echo "INFO: Line '--oidc-ca-file=/etc/kubernetes/secrets/ca.crt' not found in daemonset kube-apiserver."
    fi
fi